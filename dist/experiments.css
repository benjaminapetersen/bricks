/*
    How to get an adaptive layout with flexbox?
    - could have 'row'(?) classes, but these are loaded since row/column is
      reserved for flexbox/
*/
[shadow-nil] {
  box-shadow: 0px 0px 0px 0px #9c9c9c; }

.shadow-nil {
  box-shadow: 0px 0px 0px 0px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-nil] {
  box-shadow: 0px 0px 0px 0px #9c9c9c; }

.shadow-offset-nil {
  box-shadow: 0px 0px 0px 0px #9c9c9c; }

[shadow-xs] {
  box-shadow: 0px 0px 1px 1px #9c9c9c; }

.shadow-xs {
  box-shadow: 0px 0px 1px 1px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-xs] {
  box-shadow: 1px 1px 0px 0px #9c9c9c; }

.shadow-offset-xs {
  box-shadow: 1px 1px 0px 0px #9c9c9c; }

[shadow-sm] {
  box-shadow: 0px 0px 2px 2px #9c9c9c; }

.shadow-sm {
  box-shadow: 0px 0px 2px 2px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-sm] {
  box-shadow: 2px 2px 0px 0px #9c9c9c; }

.shadow-offset-sm {
  box-shadow: 2px 2px 0px 0px #9c9c9c; }

[shadow-md] {
  box-shadow: 0px 0px 3px 3px #9c9c9c; }

.shadow-md {
  box-shadow: 0px 0px 3px 3px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-md] {
  box-shadow: 3px 3px 0px 0px #9c9c9c; }

.shadow-offset-md {
  box-shadow: 3px 3px 0px 0px #9c9c9c; }

[shadow-lg] {
  box-shadow: 0px 0px 5px 5px #9c9c9c; }

.shadow-lg {
  box-shadow: 0px 0px 5px 5px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-lg] {
  box-shadow: 5px 5px 0px 0px #9c9c9c; }

.shadow-offset-lg {
  box-shadow: 5px 5px 0px 0px #9c9c9c; }

[shadow-xl] {
  box-shadow: 0px 0px 8px 8px #9c9c9c; }

.shadow-xl {
  box-shadow: 0px 0px 8px 8px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-xl] {
  box-shadow: 8px 8px 0px 0px #9c9c9c; }

.shadow-offset-xl {
  box-shadow: 8px 8px 0px 0px #9c9c9c; }

[shadow-xxl] {
  box-shadow: 0px 0px 10px 10px #9c9c9c; }

.shadow-xxl {
  box-shadow: 0px 0px 10px 10px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-xxl] {
  box-shadow: 10px 10px 0px 0px #9c9c9c; }

.shadow-offset-xxl {
  box-shadow: 10px 10px 0px 0px #9c9c9c; }

[shadow-xxxl] {
  box-shadow: 0px 0px 12px 12px #9c9c9c; }

.shadow-xxxl {
  box-shadow: 0px 0px 12px 12px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-xxxl] {
  box-shadow: 12px 12px 0px 0px #9c9c9c; }

.shadow-offset-xxxl {
  box-shadow: 12px 12px 0px 0px #9c9c9c; }

[shadow-xxxxl] {
  box-shadow: 0px 0px 15px 15px #9c9c9c; }

.shadow-xxxxl {
  box-shadow: 0px 0px 15px 15px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-xxxxl] {
  box-shadow: 15px 15px 0px 0px #9c9c9c; }

.shadow-offset-xxxxl {
  box-shadow: 15px 15px 0px 0px #9c9c9c; }

[shadow-max] {
  box-shadow: 0px 0px 300px 300px #9c9c9c; }

.shadow-max {
  box-shadow: 0px 0px 300px 300px #9c9c9c; }

/* experimental offsets, left only currently */
[shadow-offset-max] {
  box-shadow: 300px 300px 0px 0px #9c9c9c; }

.shadow-offset-max {
  box-shadow: 300px 300px 0px 0px #9c9c9c; }

[round-nil] {
  border-radius: 0px; }

.round-nil {
  border-radius: 0px; }

[round-xs] {
  border-radius: 1px; }

.round-xs {
  border-radius: 1px; }

[round-sm] {
  border-radius: 2px; }

.round-sm {
  border-radius: 2px; }

[round-md] {
  border-radius: 3px; }

.round-md {
  border-radius: 3px; }

[round-lg] {
  border-radius: 5px; }

.round-lg {
  border-radius: 5px; }

[round-xl] {
  border-radius: 8px; }

.round-xl {
  border-radius: 8px; }

[round-xxl] {
  border-radius: 10px; }

.round-xxl {
  border-radius: 10px; }

[round-xxxl] {
  border-radius: 12px; }

.round-xxxl {
  border-radius: 12px; }

[round-xxxxl] {
  border-radius: 15px; }

.round-xxxxl {
  border-radius: 15px; }

[round-max] {
  border-radius: 300px; }

.round-max {
  border-radius: 300px; }
